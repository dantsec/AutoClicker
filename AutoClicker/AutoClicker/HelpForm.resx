<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="descriptionTextBox.Text" xml:space="preserve">
    <value>An auto clicker is a software or script designed to automate the process of clicking the mouse button on a computer. It is primarily used to save time and reduce repetitive tasks that require frequent mouse clicks. Auto clickers can be useful in a variety of applications, from gaming to software testing and data entry.

Auto clickers come with various features and settings, allowing users to customize their automation experience. Users can set the click interval, which determines how quickly the auto clicker repeats clicks, and specify the target area on the screen where the clicks should occur. Some advanced auto clickers can even record and replay a series of mouse clicks and movements, enabling more complex automation tasks.

While auto clickers can be a valuable tool for simplifying tasks, it's essential to use them responsibly and ethically. In some cases, they may be against the terms of service of certain software or games, and their misuse can lead to negative consequences. Therefore, it's crucial to always use auto clickers in a manner that complies with the rules and regulations of the application or system you are working with.

To use this software, select all the options visible on the screen, and on the "Pick Location" button, pressing space / enter, move the mouse to the desired location and release the pressed key, and the position will already be configured. With the "Hotkey Settings" button you can configure another hotkey to start the program. That's all, have fun!</value>
  </data>
  <data name="licenseTextBox.Text" xml:space="preserve">
    <value>MIT License

Copyright (c) 2020 Dantsec

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>